language: node_js
node_js:
  - '10.16.0'

dist: xenial

services:
  - docker
addons:
  apt:
    packages:
      - docker-ce
      - libsecret-1-dev

install:
  - docker --version
  - docker-compose --version

script:
  - docker-compose up -d graph-node
  - docker-compose logs graph-node

  - echo 'npm ci:' && echo -en 'travis_fold:start:script.1\\r'
  - npm ci
  - echo -en 'travis_fold:end:script.1\\r'

  # deploy contracts etc
  - npm run deploy

  - echo 'Debug info:' && echo -en 'travis_fold:start:script.2\\r'
  - docker images --digests | grep graph-node
  - docker-compose exec graph-node graph-node --version
  # - docker-compose logs graph-node
  - echo -en 'travis_fold:end:script.2\\r'
  - sleep 120

  - npm run lint
  - npm run jest

after_success:
- |
  if [ "$TRAVIS_BRANCH" = "deploy-travis" ]; then
    if [ ! -z "$access_token" ]; then
      # set for production
      export graph_node="https://api.thegraph.com/deploy/"
      export ipfs_node="https://api.thegraph.com/ipfs-daostack/"

      # deploy mainnet
      export network="mainnet"
      export subgraph="daostack/master"
      npm run deploy

      # deploy rinkeby
      export network="rinkeby"
      export subgraph="daostack/master_rinkeby"
      npm run deploy

      # Switch to staging key
      export access_token=staging_access_token

      # set for production
      export graph_node="https://api.staging.thegraph.com/deploy/"
      export ipfs_node="https://api.staging.thegraph.com/ipfs-daostack/"

      # deploy mainnet
      export network="mainnet"
      export subgraph="daostack/master"
      npm run deploy

      # deploy rinkeby
      export network="rinkeby"
      export subgraph="daostack/master_rinkeby"
      npm run deploy
    fi
  fi
